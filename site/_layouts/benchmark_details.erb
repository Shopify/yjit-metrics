---
urls:
  yjit: https://github.com/Shopify/yjit
  yjit_bench: https://github.com/Shopify/yjit-bench
  ruby: https://github.com/ruby/ruby
---
<!DOCTYPE html>
<!-- Copied from Slate default and modified -->
<html lang="en-US">

  <head>
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,maximum-scale=2">
    <script src="/assets/js/clipboard.min.js"></script>
    <link rel="stylesheet" type="text/css" media="screen" href="<%= asset_url('css/style.css') %>">
    <title>YJIT Benchmarks from <%= page.date_str %> <%= page.time_str %> for <%= page.yjit_commit %></title>
  </head>

  <body>
    <!-- HEADER -->
    <div id="header_wrap" class="outer">
        <header class="inner">
          <h1 id="project_title"><a href="/">YJIT Benchmarks</a></h1>
          <div style="clear:both;"></div>
        </header>
    </div>

    <!-- MAIN CONTENT -->
    <div id="main_content_wrap" class="outer">
      <section id="main_content" class="inner">

      <!-- Content specific to benchmark details -->
      <h2>Details for Benchmarks at <span class="timestamp"><%= page.date_str %> <%= page.time_str %></span></h2>

      <p>
        <a href="<%= urls[:yjit] %>">YJIT</a>
        metrics from the <a href="<%= urls[:yjit_bench] %>">yjit-bench suite</a>
        <% if page.yjit_commit %>
          using Ruby
          <a href="<%= urls[:ruby] %>/commit/<%= page.yjit_commit %>"><%= page.yjit_commit[0..9] %></a>.
        <% end %>
      </p>

      <div><%= include page.reports[:blog_speed_headline_html] %></div>

      <% page.duration&.each_pair do |platform, seconds| %>
        <div>
        <% if seconds %>
          <%= platform %> runtime:
          <%= seconds / 3600 %> hours,
          <%= (seconds % 3600 / 60.0).ceil %> minutes
        <% end %>
        </div>
      <% end %>

      <h2 id="headline-speed-graph">Performance on Headline Benchmarks</h2>

      <div data-platform-selector="yes"
        data-graph-url="blog_speed_details_<%= page.timestamp %>.PLATFORM.head.svg">
            <%= text(:speed_graph) %>
      </div>

      <h2 id="headline-memory-graph">Memory Usage on Headline Benchmarks</h2>

      <div data-platform-selector="yes"
        data-graph-url="blog_memory_details_<%= page.timestamp %>.PLATFORM.head.svg">
            <%= text(:memory_graph) %>
      </div>

      <h2 id="other-speed-graph">Performance on Other Benchmarks</h2>

      <div data-platform-selector="yes"
        data-graph-url="blog_speed_details_<%= page.timestamp %>.PLATFORM.back.svg">
            <%= text(:speed_graph) %>
      </div>

      <h2 id="other-memory-graph">Memory Usage on Other Benchmarks</h2>

      <div data-platform-selector="yes"
        data-graph-url="blog_memory_details_<%= page.timestamp %>.PLATFORM.back.svg">
            <%= text(:memory_graph) %>
      </div>

      <h2 id="microbenchmarks-speed-graph">Performance on MicroBenchmarks</h2>

      <div data-platform-selector="yes"
        data-graph-url="blog_speed_details_<%= page.timestamp %>.PLATFORM.micro.svg">
            <%= text(:speed_graph) %>
      </div>

      <h2 id="microbenchmarks-memory-graph">Memory Usage on MicroBenchmarks</h2>

      <div data-platform-selector="yes"
        data-graph-url="blog_memory_details_<%= page.timestamp %>.PLATFORM.micro.svg">
            <%= text(:memory_graph) %>
      </div>

      <h2 id="raw-data">Want Raw Graphs and CSV?</h2>

      <ul>
        <% page.platforms.each do |platform| %>
          <li><a href="/reports/platform_details/blog_speed_details_<%= page.timestamp %>.<%= platform %>.head.svg">Headlining benchmarks (<%= platform %>)</a></li>
          <li><a href="/reports/platform_details/blog_speed_details_<%= page.timestamp %>.<%= platform %>.svg">All benchmarks (<%= platform %>)</a></li>
          <li><a href="/reports/platform_details/blog_speed_details_<%= page.timestamp %>.<%= platform %>.csv">CSV speed results (<%= platform %>)</a></li>
        <% end %>
      </ul>

      <h2 id="speed-table">Benchmarks Speed Details</h2>

      <div data-platform-selector="yes"
        data-graph-url="blog_speed_details_<%= page.timestamp %>.PLATFORM.html">
      </div>

      <h2 id="memory-table">Benchmark Memory Usage Details</h2>

      <div data-platform-selector="yes"
        data-graph-url="blog_memory_details_<%= page.timestamp %>.PLATFORM.html">
      </div>

      <h2 id="iteration-count">Number of Iterations and Warmups Tested</h2>

      <%= include page.reports[:iteration_count_html] %>

      <h2 id="yjit-stats">Benchmark YJIT Stats</h2>

      <%= include page.reports[:blog_yjit_stats_html] %>

      <p>Note: currently, all stats are collected on x86_64, not ARM.</p>

      <h2 id="raw-json">Raw JSON data files</h2>

      <p>
        All graphs and table data in this page comes from processing these data files, which come from <a href="https://github.com/Shopify/yjit-metrics/blob/main/basic_benchmark.rb">benchmark runs</a>.
      </p>

      <ul>
      <% page.test_results.each do |result| %> <li><a href="<%= raw_data_url result[1] %>"><%= result[0] %></a></li> <% end %>
      </ul>

      <hr/>
      <%= content %>
      
      <script>
        var platformsThisTimestamp = <%= json(page.platforms) %>;
      
        // Create platform-selector DOM elements
        function addPlatformSelector(elt) {
          var top_element = document.createElement('div');
          var graphUrl = elt.dataset.graphUrl;
          var ctr = elt.dataset.platformCounter;

          if(platformsThisTimestamp.length == 1) {
            top_element.innerHTML = `
      <div class="platform_graph_wrapper" id="plat-wrapper-${ctr}" data-plat-counter="${ctr}" data-single-platform="true" data-url-template="${graphUrl}">
        <img id="graph-loading-${ctr}" class="graph-loading" src="/images/loading.gif" height="32" width="32" style="display: none" />
        <div id="graph-error-${ctr}" class="graph-error" style="display: none"><span style="color: red; font-size: 500%;">X</span></div>
        <div id="graph-location-${ctr}" data-plat-counter="${ctr}" class="plat-graph-fetch-dest">
        </div>
      </div
            `
          } else {
            top_element.innerHTML = `
      <div class="platform_graph_wrapper" id="plat-wrapper-${ctr}" data-plat-counter="${ctr}" data-multi-platform="true" data-url-template="${graphUrl}">
      <form>
        <fieldset id="plat-select-fieldset-${ctr}" class="plat-select-fieldset">
          <legend>Select Platform</legend>

          <label>
            <input type="radio" name="plat-select-${ctr}" value="x86_64" checked />
            Xeon x86_64
          </label>

          <label>
            <input type="radio" name="plat-select-${ctr}" value="aarch64" />
            AWS Graviton ARM64
          </label>
        </fieldset>
      </form>
      <img id="graph-loading-${ctr}" class="graph-loading" src="/images/loading.gif" height="32" width="32" style="display: none;" />
      <div id="graph-error-${ctr}" class="graph-error" style="display:none"><span style="color: red; font-size: 500%;">X</span></div>
      <div id="graph-location-${ctr}" data-plat-counter="${ctr}" class="plat-graph-fetch-dest">
      </div>
      <div style="clear:both"></div>
      </div>
        `
        }

          // Any text or other content will be at the bottom, below the graph and selector
          elt.prepend(top_element);
        }

        // How to turn a GH URL template into a real URL
        function urlFromTemplate(opts) {
          var t = opts.template;
          if(opts.platform) {
            t = t.replaceAll("PLATFORM", opts.platform);
          }
          return "/reports/platform_details/" + t;
        }

        // Load platform-specific graph content into appropriate divs
        var platform_counter = 1;
        document.platform_handlers = {};
        document.querySelectorAll("div[data-platform-selector]").forEach(function (elt) {
          elt.dataset.platformCounter = platform_counter; // Set data-platform-counter for later handlers
          platform_counter++; // Next elt's platform_counter is guaranteed different
          addPlatformSelector(elt);
        });

        // We're going to want to AJAX-fetch platform-specific graphs. And if a
        // fetch is already pending, we need to cancel it. We'll track that with
        // an array of 'cancellers' (AbortControllers).
        var fetchCancel = [];
        var prevPlatform = [];
        function makePlatGraphRequest(wrapperElt, platform) {
          var platCtr = wrapperElt.dataset.platCounter;

          // Is there a pending request for this same platform? Let it finish.
          if(prevPlatform[platCtr] == platform && fetchCancel[platCtr]) {
            return;
          }

          setRequestPending(wrapperElt);

          // Update the URL to reflect the current platform without adding to the history.
          window.history.replaceState({}, null, "?platform=" + platform + window.location.hash);

          // Is there a pending fetch for another platform? Abort it.
          if(fetchCancel[platCtr]) {
            fetchCancel[platCtr].abort();
            delete fetchCancel[platCtr];
          }

          var url = urlFromTemplate({ template: wrapperElt.dataset.urlTemplate, platform: platform });
          var canceller = new AbortController(); // Call .abort() on controller to send abort signal
          fetchCancel[platCtr] = canceller;
          // Fetch the URL, then load its contents into the .plat-graph-fetch-dest div
          fetch(url, {signal: canceller.signal}).then(function (response) {
            delete fetchCancel[platCtr];
            if(response.ok) {
              setRequestFinished(wrapperElt);
              var graphLocation = wrapperElt.querySelector(".plat-graph-fetch-dest");
              return response.text().then((data) => graphLocation.innerHTML = data);
            } else {
              setRequestError(wrapperElt);
            }
            return response.text();
          });
      
          prevPlatform[platCtr] = platform;
        }
      
        function setRequestPending(wrapperElt) {
          var loader = wrapperElt.querySelector(".graph-loading");
          loader.style.display = "block";
          var error = wrapperElt.querySelector(".graph-error");
          error.style.display = "none";
        }
      
        function setRequestFinished(wrapperElt) {
          var loader = wrapperElt.querySelector(".graph-loading");
          loader.style.display = "none";
          var error = wrapperElt.querySelector(".graph-error");
          error.style.display = "none";
        }
      
        function setRequestError(wrapperElt) {
          var loader = wrapperElt.querySelector(".graph-loading");
          loader.style.display = "none";
          var error = wrapperElt.querySelector(".graph-error");
          error.style.display = "block";
        }

        function getPlatformFromUrl() {
          // Search url for either "?platform=aarch64" or "#aarch64".
          var platform = (new URLSearchParams(location.search)).get('platform') || location.hash.slice(1);

          document.querySelectorAll(".platformError").forEach(function(elt) { elt.parentNode.removeChild(elt); });
          if(platform == "aarch64" || platform == "x86_64") {
            return platform;
          } else if (!platform || platform == "") {
            var preferred = "x86_64";
            if (platformsThisTimestamp.includes(preferred)) {
              return preferred;
            }
            return platformsThisTimestamp[0];
          } else {
            document.querySelectorAll(".platform_graph_wrapper").forEach(function(elt) {
              var msg = document.createElement("p");
              msg.className = "platformError";
              msg.innerHTML = "<b style='color: red'>Error in URL parameter, please fix platform name!</b>"
              elt.prepend(msg);
            });
            return "x86_64";
          }
        }
      
        function updatePageFromCurrentPlatform() {
          document.querySelectorAll(".plat-select-fieldset input[type=radio]").forEach(function(elt) {
            if(elt.value == currentPlatform) {
              elt.checked = true;
            }
          });
          document.querySelectorAll(".platform_graph_wrapper").forEach(function(elt) {
            makePlatGraphRequest(elt, currentPlatform);
          });
        }
      
        // We have DOM elements in place. Now we start AJAX-fetching all the detail graphs.
        var currentPlatform = getPlatformFromUrl(); // For now, always default to x86_64 on page load
        updatePageFromCurrentPlatform();
      
        // If a platform parameter is added (or equivalently, clicked), change the platform to the new one.
        window.addEventListener("hashchange", function () {
          currentPlatform = getPlatformFromUrl();
          updatePageFromCurrentPlatform();
        });
      
        // If anybody clicks a platform radio button, send a new request and cancel the old one, if any.
        document.addEventListener('click', function(event) {
          // Did they click a platform radio button? If not, we ignore it.
          if(!event.target.matches('.plat-select-fieldset input[type="radio"]')) return;
      
          // If they did, get the closest parent with a data-plat-counter,
          // and use it to locate our corresponding graph wrapper.
          var parent = event.target.closest("[data-plat-counter]");
          var platCtr = parent.dataset.platCounter;
          var newPlatform = event.target.value;
      
          if(prevPlatform[platCtr] != newPlatform) {
            var wrapperElt = document.getElementById(`plat-wrapper-${platCtr}`);
            makePlatGraphRequest(wrapperElt, newPlatform);
          }
        });

        // Automatically add a hidden link tag to each h2 that has an id to make it easy to click and copy a link to that fragment.
        document.querySelectorAll('h2[id]').forEach(function(el) {
          el.innerHTML = '<a class="para" href="#' + el.getAttribute('id') + '">¶</a>' + el.innerHTML;
        });
      </script>
      <!-- End content specific to benchmark details -->      


      </section>
    </div>

    <!-- FOOTER  -->
    <div id="footer_wrap" class="outer">
      <footer class="inner">
        <ul>
          <li><a href="<%= relative_url "about.html" %>">About YJIT Benchmarks</a></li>
          <li><a href="<%= relative_url "history.html" %>">Raw Results History</a></li>
        </ul>
      </footer>
    </div>

    <div id="svg_tooltip"></div>
    <div id="svg_tooltip_sha_copied"></div>

    <script type="text/javascript" src="<%= asset_url('js/footer.js') %>"></script>
  </body>
</html>
